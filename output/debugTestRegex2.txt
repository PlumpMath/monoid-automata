Input Regex is:
.*ab23.*ab3U.b1.c3b2..*a1b2.c1b8
Build Monoid Automata:
Current symbol: 8
Current symbol: b
is label
Current symbol: 1
New Label:
Label: b
Number: 8
Automata:
first:
0 ,
finals:
0 ,
Current symbol: c
is label
Current symbol: .
New Label:
Label: c
Number: 1
Automata:
first:
1 ,
finals:
1 ,
New index: 2 ; Prev index: 1 ; Prev prev index: 0
CONCAT
Automata:
first:
1,

finals:
0,

nullable: 0
state // follow // label // number
1 // 0,  // c // 1

Current symbol: 2
Current symbol: b
is label
Current symbol: 1
New Label:
Label: b
Number: 2
Automata:
first:
2 ,
finals:
2 ,
Current symbol: a
is label
Current symbol: *
New Label:
Label: a
Number: 1
Automata:
first:
3 ,
finals:
3 ,
New index: 3 ; Prev index: 1 ; Prev prev index: 0
STAR
Automata:
first:
3,

finals:
3,

nullable: 1
state // follow // label // number
3 // 3,  // a // 1

Current symbol: .
New index: 1 ; Prev index: 3 ; Prev prev index: 0
CONCAT
Automata:
first:
3,
2,

finals:
2,

nullable: 0
state // follow // label // number
3 // 3, 2,  // a // 1
2 //  // b // 2

Current symbol: .
New index: 0 ; Prev index: 1 ; Prev prev index: 2
CONCAT
Automata:
first:
3,
2,

finals:
0,

nullable: 0
state // follow // label // number
3 // 3, 2,  // a // 1
2 // 1,  // b // 2

Current symbol: 2
Current symbol: b
is label
Current symbol: 3
New Label:
Label: b
Number: 2
Automata:
first:
4 ,
finals:
4 ,
Current symbol: c
is label
Current symbol: .
New Label:
Label: c
Number: 3
Automata:
first:
5 ,
finals:
5 ,
New index: 3 ; Prev index: 1 ; Prev prev index: 2
CONCAT
Automata:
first:
5,

finals:
4,

nullable: 0
state // follow // label // number
5 // 4,  // c // 3

Current symbol: 1
Current symbol: b
is label
Current symbol: .
New Label:
Label: b
Number: 1
Automata:
first:
6 ,
finals:
6 ,
New index: 1 ; Prev index: 2 ; Prev prev index: 3
CONCAT
Automata:
first:
6,

finals:
4,

nullable: 0
state // follow // label // number
6 // 5,  // b // 1

Current symbol: U
New index: 3 ; Prev index: 1 ; Prev prev index: 0
UNION
Automata:
first:
6,
3,
2,

finals:
4,
0,

nullable: 0
state // follow // label // number
6 // 5,  // b // 1
3 // 3, 2,  // a // 1
2 // 1,  // b // 2

Current symbol: 3
Current symbol: b
is label
Current symbol: a
is label
Current symbol: *
New Label:
Label: ab
Number: 3
Automata:
first:
7 ,
finals:
7 ,
New index: 1 ; Prev index: 0 ; Prev prev index: 3
STAR
Automata:
first:
7,

finals:
7,

nullable: 1
state // follow // label // number
7 // 7,  // ab // 3

Current symbol: .
New index: 0 ; Prev index: 1 ; Prev prev index: 3
CONCAT
Automata:
first:
7,
6,
3,
2,

finals:
4,
0,

nullable: 0
state // follow // label // number
7 // 7, 6, 3, 2,  // ab // 3
6 // 5,  // b // 1
3 // 3, 2,  // a // 1
2 // 1,  // b // 2

Current symbol: 3
Current symbol: 2
Current symbol: b
is label
Current symbol: a
is label
Current symbol: *
New Label:
Label: ab
Number: 23
Automata:
first:
8 ,
finals:
8 ,
New index: 1 ; Prev index: 3 ; Prev prev index: 0
STAR
Automata:
first:
8,

finals:
8,

nullable: 1
state // follow // label // number
8 // 8,  // ab // 23

Current symbol: .
New index: 3 ; Prev index: 1 ; Prev prev index: 0
CONCAT
Automata:
first:
8,
7,
6,
3,
2,

finals:
4,
0,

nullable: 0
state // follow // label // number
8 // 8, 7, 6, 3, 2,  // ab // 23
7 // 7, 6, 3, 2,  // ab // 3
6 // 5,  // b // 1
3 // 3, 2,  // a // 1
2 // 1,  // b // 2

cbab
PUSH: state // subwordIndex // sum
8 // 0 // 23
PUSH: state // subwordIndex // sum
7 // 0 // 3
PUSH: state // subwordIndex // sum
6 // 0 // 1
PUSH: state // subwordIndex // sum
3 // 0 // 1
PUSH: state // subwordIndex // sum
2 // 0 // 2
k = 2, sum = 2, subwordIndex = 0
final(k) : 0
k = 3, sum = 1, subwordIndex = 0
final(k) : 0
k = 6, sum = 1, subwordIndex = 0
final(k) : 0
k = 7, sum = 3, subwordIndex = 0
final(k) : 0
k = 8, sum = 23, subwordIndex = 0
final(k) : 0
result:
bcb
PUSH: state // subwordIndex // sum
8 // 0 // 23
PUSH: state // subwordIndex // sum
7 // 0 // 3
PUSH: state // subwordIndex // sum
6 // 0 // 1
PUSH: state // subwordIndex // sum
3 // 0 // 1
PUSH: state // subwordIndex // sum
2 // 0 // 2
k = 2, sum = 2, subwordIndex = 0
final(k) : 0
PUSH: state // subwordIndex // sum
1 // 1 // 3
k = 1, sum = 3, subwordIndex = 1
final(k) : 0
PUSH: state // subwordIndex // sum
0 // 2 // 11
k = 0, sum = 11, subwordIndex = 2
final(k) : 1
k = 3, sum = 1, subwordIndex = 0
final(k) : 0
k = 6, sum = 1, subwordIndex = 0
final(k) : 0
PUSH: state // subwordIndex // sum
5 // 1 // 4
k = 5, sum = 4, subwordIndex = 1
final(k) : 0
PUSH: state // subwordIndex // sum
4 // 2 // 6
k = 4, sum = 6, subwordIndex = 2
final(k) : 1
k = 7, sum = 3, subwordIndex = 0
final(k) : 0
k = 8, sum = 23, subwordIndex = 0
final(k) : 0
result:
11
6

